APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=coding_rounnd
DB_USERNAME=root
DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"


# You are required to build a simple Blog API with Comments using Laravel. Please
# complete the following tasks: 
# Models &amp; Migrations
# Create a Post model with the following fields:
# title (string, required, unique, max 255 characters)
# body (text, required)
# Create a Comment model with the following fields:
# post_id (foreign key to posts)
# author_name (string, required)
# content (text, required)
# Relationships
# A Post can have many Comments.
# A Comment belongs to a Post.
# API Routes
# POST /api/posts → create a new post (with validation).
# GET /api/posts → list all posts with pagination (5 per page).
# GET /api/posts/{id} → fetch a single post along with all its comments.
# POST /api/posts/{id}/comments → add a comment to a post (with validation).
# DELETE /api/comments/{id} → delete a comment.
# Validation
# title must be unique.
# body, author_name, and content are required.
# Return proper validation error messages in JSON format.
# Additional Requirements (Slightly Advanced)
# Implement a query scope to filter posts by a search keyword in title/body (e.g., GET
# /api/posts?search=keyword).
# Use Laravel&#39;s API Resource classes for consistent JSON formatting.
# Enable soft deletes for posts so that deleted posts do not appear in queries by
# default.
# Submission:
# Share your code in a public GitHub repository or a zipped folder.
# Include a README file with setup instructions (how to run migrations and test the
# API).


# hr@collationhub.com
